# 가정 1. /root 폴더가 /Users/thruthesky/docker/emp 로 연결되어져 있다고 가정한다.

#user  nobody;
worker_processes  1;
error_log  logs/error.log debug;
events {
    worker_connections  256;
}
http {
    include       mime.types;
    default_type  application/octet-stream;

    # Host OS 의 /Users/thruthesky/docker/emp/docker/logs/access.log 에 기록된다.
    access_log  logs/access.log;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    client_max_body_size    500M;

    # All hosts except(localhost) sholud go to 443(https) port.
#    server {
#        server_name  .philov.com .itsuda50.com;
#        listen       80;
#        rewrite ^ https://$host$request_uri? permanent;
#    }

    server {
        listen       	80;
        server_name _;
        autoindex on;

        # Host OS 의 /Users/thruthesky/docker/emp/ 폴더가 /root 폴더가 된다.
        root /root;
        # Host OS 의 /Users/thruthesky/docker/emp/index.php 가 실행된다.
        index index.php;

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        # 주의: PHP 파일이 읽혀지면, 127.0.0.1:9000 이 아니라, php:9000 으로 연결한다. 이 때, php 는 docker-compose.yml 의 php 서비스 이름이다.
        location ~ \.php$ {
            fastcgi_pass   php:9000;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
    }

    server {
    	listen		443 ssl;
        server_name .philov.com;

        # Host OS 의 /Users/thruthesky/docker/emp/tmp/ssl/philov.com/ 에서 cert 파일을 찾는다.
        ssl_certificate /root/tmp/ssl/philov.com/cert-ca-bundle.crt;
        ssl_certificate_key /root/tmp/ssl/philov.com/private.key;

        #charset koi8-r;


        autoindex on;

        # Host OS 의 /Users/thruthesky/docker/emp/ 폴더가 /root 폴더가 된다.
        root /root;
        # Host OS 의 /Users/thruthesky/docker/emp/index.php 가 실행된다.
        index index.php;


        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        # 주의: PHP 파일이 읽혀지면, 127.0.0.1:9000 이 아니라, php:9000 으로 연결한다. 이 때, php 는 docker-compose.yml 의 php 서비스 이름이다.
        location ~ \.php$ {
            fastcgi_pass   php:9000;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
    }
    
	server {
        server_name .itsuda50.com;
        listen 443 ssl; # managed by Certbot
        ssl_certificate /root/tmp/ssl/itsuda50.com/fullchain.pem; # managed by Certbot
        ssl_certificate_key /root/tmp/ssl/itsuda50.com/privkey.pem; # managed by Certbot
        root /root;
        index index.php;
        location / {
            try_files $uri $uri/ /index.php?$args;
        }
        location ~ \.php$ {
            fastcgi_pass   php:9000;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }
        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
            expires max;
            add_header Access-Control-Allow-Origin *;
        }
    }
}
